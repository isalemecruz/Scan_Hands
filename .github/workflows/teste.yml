name: Teste PHP, Login e Banco

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-php:
    runs-on: ubuntu-latest
    steps:
      - name: Baixar código
        uses: actions/checkout@v4

      - name: Instalar PHP
        run: sudo apt-get install -y php-cli

      - name: Rodar script PHP
        run: php -r "echo 'GitHub Actions rodou PHP com sucesso 🚀';"


  db-test:
    runs-on: ubuntu-latest
    steps:
      - name: Instalar MySQL client
        run: sudo apt-get install -y mysql-client

      - name: Testar logins dos alunos
        run: |
          echo "Conectando ao banco remoto e listando usuários do tipo aluno..."
          mysql -h srv720.hstgr.io -P 3306 -u u357936358_librinha -p"Librinh4tcc#" u357936358_scanhands -e "
            SELECT id_usuario, email, tipo 
            FROM usuario 
            WHERE tipo = 'aluno';
          "
          
  login-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Testar logins de todos os alunos
        env:
          DB_PASS: "Librinh4tcc#"
        run: |
          echo "Pegando todos os alunos do banco..."
          mapfile -t alunos < <(mysql -h srv720.hstgr.io -P 3306 -u u357936358_librinha -p"$DB_PASS" \
            --batch --skip-column-names \
            -e "SELECT email, senha FROM usuario WHERE tipo='aluno';" u357936358_scanhands)

          for linha in "${alunos[@]}"; do
            email=$(echo "$linha" | awk '{print $1}')
            senha=$(echo "$linha" | awk '{print $2}')
            echo "Testando login do aluno: $email"

            resposta=$(curl -s -o /dev/null -w "%{http_code}" -d "email=$email&senha=$senha&tipo=aluno" https://seusite.com.br/login)

            if [ "$resposta" -eq 200 ]; then
              echo "✅ Login OK para $email"
            else
              echo "❌ Falha no login de $email"
            fi
          done





